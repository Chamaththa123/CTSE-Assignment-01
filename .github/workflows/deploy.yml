name: Build and Publish Images to Docker Hub

on:
  push:
    branches:
      - main
  workflow_dispatch: # Keeps the manual trigger option as well


jobs:
  publish_images:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Build images
        run: |
          docker build ./user-service -t chamaththa/user-service:latest
          
          docker build ./product-service -t chamaththa/product-service:latest

          docker build ./order-service -t chamaththa/order-service:latest

          docker build ./product-category-service -t chamaththa/product-category-service:latest
          
          docker build ./gateway -t chamaththa/api-gateway:latest

      - name: Push images to Docker Hub
        run: |
          docker login -u chamaththa -p ${{ secrets.DOCKER_HUB_TOKEN }}
          
          docker push chamaththa/user-service:latest

          docker push chamaththa/product-service:latest

          docker push chamaththa/order-service:latest

          docker push chamaththa/product-category-service:latest
          
          docker push chamaththa/api-gateway:latest

  deploy_to_ecs:
    needs: publish_images
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3

        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy to AWS ECS
        run: |
          aws ecs update-service --cluster CTSE-Cluster --service user-service-task-service-final --force-new-deployment
          aws ecs update-service --cluster CTSE-Cluster --service product-service-task-service-final --force-new-deployment
          aws ecs update-service --cluster CTSE-Cluster --service order-service-task-service-final  --force-new-deployment
          aws ecs update-service --cluster CTSE-Cluster --service product-category-service-task-service-final  --force-new-deployment

  sonar_cloud:
    name: SonarCloud Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          args: >
            -Dsonar.projectKey=Chamaththa123_CTSE-Assignment-01
            -Dsonar.organization=chamaththa123-org
            -Dsonar.host.url=https://sonarcloud.io
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}


